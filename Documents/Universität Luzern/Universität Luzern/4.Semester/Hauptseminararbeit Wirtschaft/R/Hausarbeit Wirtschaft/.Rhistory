"Maccabi Tel Aviv",                          0
)
# 🛠️ Zuschauer nur für Saison 2024/25 eintragen
df <- df %>%
left_join(zuschauer_2024, by = "Home") %>%
mutate(
Zuschauer = ifelse(Saison == "2024/25" & is.na(Zuschauer), Zuschauer_mittelwert, Zuschauer)
) %>%
select(-Zuschauer_mittelwert)
# 🧾 Tabelle der Zuschauerzahlen für Heimteams in der Saison 2024/25
zuschauer_2024 <- tibble::tribble(
~Home, ~Zuschauer_mittelwert,
"Partizan",                              18486,
"Crvena Zvezda Belgrade",                18239,
"Panathinaikos Athens",                  17111,
"Zalgiris Kaunas",                       14895,
"Olympiacos Piraeus",                    11546,
"FC Bayern München",                     10872,
"Fenerbahce BEKO",                       10785,
"Baskonia",                               9485,
"Anadolu Efes Istanbul",                  9220,
"ALBA Berlin",                            9180,
"EA7 Emporio Armani Milan",               9095,
"Real Madrid",                            8899,
"Segafredo Bologna",                      7792,
"LDLC ASVEL",                             7237,
"Paris Basketball",                       7044,
"FC Barcelona",                           6212,
"AS Monaco",                              3874,
"Maccabi Tel Aviv",                          0
)
# 🛠️ Zuschauer nur für Saison 2024/25 eintragen
df <- df %>%
left_join(zuschauer_2024, by = "Home") %>%
mutate(
Zuschauer = ifelse(Saison == "2024/25" & is.na(Zuschauer), Zuschauer_mittelwert, Zuschauer)
) %>%
select(-Zuschauer_mittelwert)
# 🧾 Tabelle der Zuschauerzahlen für Heimteams in der Saison 2024/25
zuschauer_2024 <- tibble::tribble(
~Home, ~Zuschauer_mittelwert,
"Partizan",                              18486,
"Crvena Zvezda Belgrade",                18239,
"Panathinaikos Athens",                  17111,
"Zalgiris Kaunas",                       14895,
"Olympiacos Piraeus",                    11546,
"FC Bayern München",                     10872,
"Fenerbahce BEKO",                       10785,
"Baskonia",                               9485,
"Anadolu Efes Istanbul",                  9220,
"ALBA Berlin",                            9180,
"EA7 Milano",                             9095,
"Real Madrid",                            8899,
"Segafredo Bologna",                      7792,
"LDLC ASVEL",                             7237,
"Paris Basketball",                       7044,
"FC Barcelona",                           6212,
"AS Monaco",                              3874,
"Maccabi Tel Aviv",                          0
)
# 🛠️ Zuschauer nur für Saison 2024/25 eintragen
df <- df %>%
left_join(zuschauer_2024, by = "Home") %>%
mutate(
Zuschauer = ifelse(Saison == "2024/25" & is.na(Zuschauer), Zuschauer_mittelwert, Zuschauer)
) %>%
select(-Zuschauer_mittelwert)
# 📌 Zuschauerzahlen 2023/24 – in exakt passender Schreibweise
zuschauer_2023 <- tibble::tribble(
~Home, ~Zuschauer_mittelwert,
"Partizan",               19916,
"Crvena Zvezda Belgrade", 17842,
"Zalgiris Kaunas",        14832,
"Panathinaikos Athens",   14717,
"Anadolu Efes Istanbul",  12291,
"Olympiacos Piraeus",     11452,
"EA7 Milano",             10045,
"Fenerbahce BEKO",         9758,
"Baskonia",                9738,
"ALBA Berlin",             9429,
"Real Madrid",             8562,
"Segafredo Bologna",       8045,
"LDLC ASVEL",              7754,
"Valencia Basket",         6416,
"FC Bayern München",       6396,
"FC Barcelona",            5854,
"AS Monaco",               4171,
"Maccabi Tel Aviv",        5379
)
# 🛠️ Zuschauerzahlen NUR für Saison 2023/24 ergänzen
df_updated <- df %>%
left_join(zuschauer_2023, by = "Home") %>%
mutate(
Zuschauer = if_else(
Saison == "2023/24" & is.na(Zuschauer),
Zuschauer_mittelwert,
Zuschauer
)
) %>%
select(-Zuschauer_mittelwert)
# 🛠️ Zuschauerzahlen NUR für Saison 2023/24 ergänzen
df <- df %>%
left_join(zuschauer_2023, by = "Home") %>%
mutate(
Zuschauer = if_else(
Saison == "2023/24" & is.na(Zuschauer),
Zuschauer_mittelwert,
Zuschauer
)
) %>%
select(-Zuschauer_mittelwert)
library(dplyr)
library(readr)
# Quelle:https://en.wikipedia.org/wiki/2022%E2%80%9323_EuroLeague#Attendances
zuschauer_2023 <- tibble::tribble(
~Home, ~Zuschauer_mittelwert,
"Partizan",               17938,
"Zalgiris Kaunas",        14829,
"Anadolu Efes Istanbul",  13114,
"Olympiacos Piraeus",     10454,
"Maccabi Tel Aviv",       10432,
"Fenerbahce BEKO",        10394,
"EA7 Milano",              9153,
"Baskonia",                8935,
"ALBA Berlin",             8820,
"Real Madrid",             8128,
"Crvena Zvezda Belgrade",  7085,
"FC Barcelona",            6353,
"Panathinaikos Athens",    6185,
"Segafredo Bologna",       6133,
"Valencia Basket",         6066,
"FC Bayern München",       5490,
"LDLC ASVEL",              5182,
"AS Monaco",               4392
)
# Zuschauerzahlen nur für Saison 2022/23 ergänzen
df_updated <- df %>%
left_join(zuschauer_2023, by = "Home") %>%
mutate(
Zuschauer = if_else(
Saison == "2022/23" & is.na(Zuschauer),
Zuschauer_mittelwert,
Zuschauer
)
) %>%
select(-Zuschauer_mittelwert)
# Zuschauerzahlen nur für Saison 2022/23 ergänzen
df <- df %>%
left_join(zuschauer_2023, by = "Home") %>%
mutate(
Zuschauer = if_else(
Saison == "2022/23" & is.na(Zuschauer),
Zuschauer_mittelwert,
Zuschauer
)
) %>%
select(-Zuschauer_mittelwert)
View(df)
# Quelle: https://en.wikipedia.org/wiki/2021%E2%80%9322_EuroLeague#Attendances
zuschauer_2022 <- tibble::tribble(
~Home, ~Zuschauer_mittelwert,
"Anadolu Efes Istanbul",     11876,
"Maccabi Tel Aviv",           8429,
"Zalgiris Kaunas",            7630,
"Olympiacos Piraeus",         7037,
"Baskonia",                   6885,
"Crvena Zvezda Belgrade",     6042,
"Real Madrid",                5943,
"Fenerbahce BEKO",            5545,
"FC Barcelona",               5174,
"EA7 Milano",                 4893,
"LDLC ASVEL",                 4237,
"Panathinaikos Athens",       3883,
"ALBA Berlin",                3825,
"AS Monaco",                  3536,
"FC Bayern München",          2673
)
df <- df %>%
left_join(zuschauer_2022, by = "Home") %>%
mutate(
Zuschauer = if_else(
Saison == "2021/22" & is.na(Zuschauer),
Zuschauer_mittelwert,
Zuschauer
)
) %>%
select(-Zuschauer_mittelwert)
library(dplyr)
library(ggplot2)
library(scales)  # für Prozentformatierung, optional
# Daten einlesen
df<- read.csv("euroleague_seasons_2000-2025_final.csv")
# Funktion für den Binomialtest pro Saison
heimvorteil_test <- df %>%
group_by(Saison) %>%
summarise(
heimspiele = sum(!is.na(Home_W)),
heimsiege = sum(Home_W == 1, na.rm = TRUE),
.groups = "drop"
) %>%
rowwise() %>%
mutate(
test = list(binom.test(heimsiege, heimspiele, p = 0.5, alternative = "two.sided")),
heimsiegquote = heimsiege / heimspiele,
p_wert = test$p.value
) %>%
select(Saison, heimspiele, heimsiege, heimsiegquote, p_wert)
# Ergebnis ansehen
heimvorteil_test
# Funktion für den Binomialtest pro Saison
heimvorteil_test <- df %>%
group_by(Saison) %>%
summarise(
heimspiele = sum(!is.na(Home_W)),
heimsiege = sum(Home_W == 1, na.rm = TRUE),
.groups = "drop"
) %>%
rowwise() %>%
mutate(
test = list(binom.test(heimsiege, heimspiele, p = 0.5, alternative = "greater")),
heimsiegquote = heimsiege / heimspiele,
p_wert = test$p.value
) %>%
select(Saison, heimspiele, heimsiege, heimsiegquote, p_wert)
# Ergebnis ansehen
heimvorteil_test
library(knitr)
library(kableExtra)
install.packages("kableExtra")
library(knitr)
library(kableExtra)
# Tabelle als .tex speichern
heimvorteil_test %>%
mutate(heimsiegquote = round(heimsiegquote*100, 1)) %>%
kable(format = "latex", booktabs = TRUE, caption = "Heimsiegquoten pro Saison in der Euroleague") %>%
save_kable("heimvorteil_tabelle.tex")
# Regression 1 mit Home_W als abhängige Variable
df <- read.csv("euroleague_2024_25_final_bereinigt.csv")
model_logit <- glm(
Home_W ~ Zuschauer + Budget_Total + Budget_Spieler,
family = binomial(),
data = df_final_clean
)
model_logit <- glm(
Home_W ~ Zuschauer + Budget_Total + Budget_Spieler,
family = binomial(),
data = df
)
summary(model_logit)
model_lm <- lm(Punktedifferenz ~ Zuschauer + Budget_Total + Budget_Spieler, data = df)
summary(model_lm)
model_lm <- lm(Punktedifferenz ~ Zuschauer + Budget_Total , data = df)
summary(model_lm)
# Modell ohne Kontrolle für Budget
model_no_budget <- lm(Y ~ Zuschauer, data = df)
# Modell ohne Kontrolle für Budget
model_no_budget <- lm(Punktedifferenz ~ Zuschauer, data = df)
# Modell mit Kontrolle für Budget
model_with_budget <- lm(Punktedifferenz ~ Zuschauer + Budget_Total, data = df)
summary(model_no_budget)
summary(model_with_budget)
df_all_seasons <- read.csv("euroleague_seasons_2000-2025.csv")
View(df_all_seasons)
df_all_seasons <- read.csv("euroleague_seasons_2000-2025.csv")
df_all_seasons <- read.csv("euroleague_seasons_2000-2025.csv")
df_all_seasons <- read.csv("euroleague_seasons_2000-2025.csv")
df_all_seasons <- read.csv("euroleague_seasons_2000-2025_final.csv")
df_all_seasons <- read.csv("euroleague_seasons_2000-2025_final.csv")
df_all_seasons <- read.csv("euroleague_seasons_2000-2025_final.csv")
df_all_seasons <- read.csv("euroleague_seasons_2000-2025_final.csv")
df_all_seasons <- read.csv("euroleague_seasons_2000-2025_final.csv")
df_all_seasons <- read.csv("euroleague_seasons_2000-2025_final.csv")
read.csv("euroleague_seasons_2000-2025_final.csv")
df <- read.csv("euroleague_seasons_2000-2025_final.csv")
View(df)
library(dplyr)
library(readr)
library(stringr)
# --- Budget-Daten für Saison 2024/25 ---
budget_2024 <- tibble::tribble(
~Home,                  ~Budget_Total, ~Budget_Spieler,
"Real Madrid",               45.0,          20.5,
"Panathinaikos Athens",      37.0,          20.5,  # €50M Gerücht ignorieren, wir nehmen 37
"Olympiacos Piraeus",        37.0,          20.5,
"Anadolu Efes Istanbul",     34.5,          17.2,
"Fenerbahce BEKO",           33.5,          16.5,
"FC Barcelona",              32.0,          15.5,
"EA7 Milano",                39.0,          14.5,
"Crvena Zvezda Belgrade",    22.0,          14.4,
"AS Monaco",                 29.4,          13.5,
"Partizan",                  23.0,          13.2,
"Segafredo Bologna",         25.0,          10.0,
"FC Bayern München",         33.0,           8.0,
"Baskonia",                  14.0,           8.0,
"Zalgiris Kaunas",           17.7,           7.5,
"Maccabi Tel Aviv",          19.0,           6.5,
"LDLC ASVEL",                16.2,           5.8,
"Paris Basketball",          18.9,           5.6,
"ALBA Berlin",               14.6,           4.1
)
# --- Nur für Saison 2024/25 eintragen ---
df <- df %>%
left_join(budget_2024, by = c("Home" = "Home")) %>%
mutate(
Budget_Total = if_else(Saison == "2024/25", Budget_Total, NA_real_),
Budget_Spieler = if_else(Saison == "2024/25", Budget_Spieler, NA_real_)
)
View(budget_2024)
# Join und nur Saison 2024/25 befüllen
df <- df %>%
left_join(budget_2024, by = c("Home" = "Home")) %>%
mutate(
Budget_Total = if_else(Saison == "2024/25", Budget_Total.y, Budget_Total.x),
Budget_Spieler = if_else(Saison == "2024/25", Budget_Spieler.y, Budget_Spieler.x)
) %>%
select(-Budget_Total.x, -Budget_Total.y, -Budget_Spieler.x, -Budget_Spieler.y)
# --- Budget-Daten für Saison 2024/25 ---
budget_2024 <- tibble::tribble(
~Home,                  ~Budget_Total, ~Budget_Spieler,
"Real Madrid",               45.0,          20.5,
"Panathinaikos Athens",      37.0,          20.5,  # €50M Gerücht ignorieren, wir nehmen 37
"Olympiacos Piraeus",        37.0,          20.5,
"Anadolu Efes Istanbul",     34.5,          17.2,
"Fenerbahce BEKO",           33.5,          16.5,
"FC Barcelona",              32.0,          15.5,
"EA7 Milano",                39.0,          14.5,
"Crvena Zvezda Belgrade",    22.0,          14.4,
"AS Monaco",                 29.4,          13.5,
"Partizan",                  23.0,          13.2,
"Segafredo Bologna",         25.0,          10.0,
"FC Bayern MÃ¼nchen",        33.0,           8.0,
"Baskonia",                  14.0,           8.0,
"Zalgiris Kaunas",           17.7,           7.5,
"Maccabi Tel Aviv",          19.0,           6.5,
"LDLC ASVEL",                16.2,           5.8,
"Paris Basketball",          18.9,           5.6,
"ALBA Berlin",               14.6,           4.1
)
# Join und nur Saison 2024/25 befüllen
df <- df %>%
left_join(budget_2024, by = c("Home" = "Home")) %>%
mutate(
Budget_Total = if_else(Saison == "2024/25", Budget_Total.y, Budget_Total.x),
Budget_Spieler = if_else(Saison == "2024/25", Budget_Spieler.y, Budget_Spieler.x)
) %>%
select(-Budget_Total.x, -Budget_Total.y, -Budget_Spieler.x, -Budget_Spieler.y)
write.csv("euroleague_seasons_2000-2025_final.csv")
# 📦 Pakete laden
library(dplyr)
# 1️⃣ Datensatz auf Saison 2024/25 filtern
df_2425 <- df %>%
filter(Saison == "2024/25") %>%
filter(!is.na(Zuschauer)) %>%          # NAs bei Zuschauer raus
filter(!is.na(Budget_Total)) %>%       # NAs bei Budget raus
filter(!is.na(Budget_Spieler))         # NAs bei Spielerbudget raus
# 2️⃣ Überblick
summary(df_2425)
# 3️⃣ Regression: Punktedifferenz ~ Zuschauer + Budget_Total + Budget_Spieler
model <- lm(Punktedifferenz ~ Zuschauer + Budget_Total + Budget_Spieler,
data = df_2425)
# 4️⃣ Ergebnisse anzeigen
summary(model)
# 3️⃣ Regression: Punktedifferenz ~ Zuschauer + Budget_Spieler
model <- lm(Punktedifferenz ~ Zuschauer + Budget_Spieler,
data = df_2425)
# 4️⃣ Ergebnisse anzeigen
summary(model)
# 5️⃣ Diagnostikplots
par(mfrow = c(2,2))
plot(model)
# 6️⃣ (Optional) Marginale Effekte grafisch darstellen
library(ggplot2)
ggplot(df_2425, aes(x = Zuschauer, y = Punktedifferenz)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Zusammenhang zwischen Zuschauerzahl und Punktedifferenz",
x = "Zuschauer",
y = "Punktedifferenz") +
theme_minimal()
# 3️⃣ Regression: Punktedifferenz ~ Zuschauer + Budget_Spieler
model <- lm(Punktedifferenz ~ Zuschauer,
data = df_2425)
# 4️⃣ Ergebnisse anzeigen
summary(model)
View(df_2425)
# Logistische Regression
model_logit <- glm(Home_W ~ Zuschauer + Budget_Spieler,
data = df_2425,
family = binomial(link = "logit"))
# Ergebnisübersicht
summary(model_logit)
# 🔹 Odds Ratios berechnen (besser interpretierbar als Logit-Koeffizienten)
exp(coef(model_logit))
# 🔹 Konfidenzintervalle für die Odds Ratios
exp(confint(model_logit))
# 4️⃣ Ergebnisse anzeigen
summary(model)
# Ergebnisübersicht
summary(model_logit)
(Home_W ~ Zuschauer + Budget_Spieler,
# Logistische Regression
model_logit <- glm(Home_W ~ Zuschauer + Budget_Spieler,
data = df_2425,
)
# Ergebnisübersicht
summary(model_logit)
# Der gesamte Code wurde mithilfe von ChatGPT geschrieben.
install.packages("stargazer")
library(stargazer)
library(stargazer)
# Beispielmodelle (hier deine glm/lm Ergebnisse einsetzen)
m1 <- glm(Home_W ~ Zuschauer, family = binomial(link="logit"), data = df_2425)
m2 <- glm(Home_W ~ Budget_Spieler, family = binomial(link="logit"), data = df_2425)
m3 <- glm(Home_W ~ Zuschauer + Budget_Spieler, family = binomial(link="logit"), data = df_2425)
# LaTeX-Tabelle exportieren
stargazer(m1, m2, m3,
type = "latex",
title = "Regressionsergebnisse",
dep.var.labels = "Heimsieg (Home_W)",
covariate.labels = c("Zuschauer", "Budget Spieler"),
omit.stat = c("ll","aic"), # nur die Statistiken zeigen, die du brauchst
no.space = TRUE,
out = "regression_table.tex")
# Modelle mit Home_W (logistische Regression)
m1 <- glm(Home_W ~ Zuschauer, family = binomial(link="logit"), data = df_2425)
m2 <- glm(Home_W ~ Budget_Spieler, family = binomial(link="logit"), data = df_2425)
m3 <- glm(Home_W ~ Zuschauer + Budget_Spieler, family = binomial(link="logit"), data = df_2425)
# Modelle mit PunkteDiff (lineare Regression)
m4 <- lm(PunkteDiff ~ Zuschauer, data = df_2425)
m5 <- lm(PunkteDiff ~ Budget_Spieler, data = df_2425)
# Modelle mit PunkteDiff (lineare Regression)
m4 <- lm(Punktedifferenz ~ Zuschauer, data = df_2425)
m5 <- lm(Punktedifferenz ~ Budget_Spieler, data = df_2425)
m6 <- lm(Punktedifferenz ~ Zuschauer + Budget_Spieler, data = df_2425)
# Alle Modelle gemeinsam in eine LaTeX-Datei
stargazer(m1, m2, m3, m4, m5, m6,
type = "latex",
title = "Regressionsergebnisse: Heimsieg und Punktedifferenz",
dep.var.labels = c("Heimsieg (Home_W)", "Punktedifferenz"),
column.labels = c("(1)", "(2)", "(3)", "(4)", "(5)", "(6)"),
covariate.labels = c("Zuschauer", "Budget Spieler"),
omit.stat = c("ll","aic","bic"), # nur relevante Statistiken zeigen
no.space = TRUE,
out = "regression_table_all.tex")
# Modelle mit Home_W (logistische Regression)
m1 <- glm(Home_W ~ Zuschauer, family = binomial(link="logit"), data = df_2425)
m2 <- glm(Home_W ~ Budget_Spieler, family = binomial(link="logit"), data = df_2425)
m3 <- glm(Home_W ~ Zuschauer + Budget_Spieler, family = binomial(link="logit"), data = df_2425)
# LaTeX-Tabelle exportieren
stargazer(m1, m2, m3,
type = "latex",
title = "Regressionsergebnisse: Heimsieg",
dep.var.labels = "Heimsieg (Home_W)",
column.labels = c("(1)", "(2)", "(3)"),
covariate.labels = c("Zuschauer", "Budget Spieler"),
omit.stat = c("ll","aic","bic"), # nur relevante Stats
no.space = TRUE,
out = "table_homew.tex")
# Modelle mit PunkteDiff (lineare Regression)
m4 <- lm(Punktedifferenz ~ Zuschauer, data = df_2425)
m5 <- lm(Punktedifferenz ~ Budget_Spieler, data = df_2425)
m6 <- lm(Punktedifferenz ~ Zuschauer + Budget_Spieler, data = df_2425)
# LaTeX-Tabelle exportieren
stargazer(m4, m5, m6,
type = "latex",
title = "Regressionsergebnisse: Punktedifferenz",
dep.var.labels = "Punktedifferenz",
column.labels = c("(4)", "(5)", "(6)"),
covariate.labels = c("Zuschauer", "Budget Spieler"),
omit.stat = c("f","ser","aic","bic"), # nur die wichtigen Statistiken zeigen
no.space = TRUE,
out = "table_punktediff.tex")
# Ergebnis ansehen
heimvorteil_test
# Funktion für den Binomialtest pro Saison
heimvorteil_test <- df %>%
group_by(Saison) %>%
summarise(
heimspiele = sum(!is.na(Home_W)),
heimsiege = sum(Home_W == 1, na.rm = TRUE),
.groups = "drop"
) %>%
rowwise() %>%
mutate(
test = list(binom.test(heimsiege, heimspiele, p = 0.5, alternative = "greater")),
heimsiegquote = heimsiege / heimspiele,
p_wert = test$p.value
) %>%
select(Saison, heimspiele, heimsiege, heimsiegquote, p_wert)
# Ergebnis ansehen
heimvorteil_test
library(dplyr)
library(ggplot2)
library(scales)
library(stargazer)
# Funktion für den Binomialtest pro Saison
heimvorteil_test <- df %>%
group_by(Saison) %>%
summarise(
heimspiele = sum(!is.na(Home_W)),
heimsiege = sum(Home_W == 1, na.rm = TRUE),
.groups = "drop"
) %>%
rowwise() %>%
mutate(
test = list(binom.test(heimsiege, heimspiele, p = 0.5, alternative = "greater")),
heimsiegquote = heimsiege / heimspiele,
p_wert = test$p.value
) %>%
select(Saison, heimspiele, heimsiege, heimsiegquote, p_wert)
# Ergebnis ansehen
heimvorteil_test
